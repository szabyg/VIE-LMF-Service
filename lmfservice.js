// Generated by CoffeeScript 1.3.1

/*
VIE LMFService

# Example usage:

## Instantiate VIE

        v = new VIE
        v.use new v.LMFService
            lmfUri: 'http://localhost:8080/LMF'

## Loading an entity:

        resUri = 'http://example.com/abcd'

        v.load
            uri: resUri
        .using('lmf')
        .execute()
        .success (res) ->
            # res is a VIE Entity
            console.info 'lmfservice.load success:', res
*/


(function() {

  VIE.prototype.LMFService = (function() {

    LMFService.name = 'LMFService';

    function LMFService(options) {
      var defaults;
      defaults = {
        name: 'lmf',
        lmfUrl: 'http://localhost:8080/LMF'
      };
      this.options = jQuery.extend(true, defaults, options != null ? options : {
        options: {}
      });
      this.vie = null;
      this.name = this.options.name;
    }

    LMFService.prototype.init = function() {
      var c;
      c = new LMFClient(this.options.lmfUrl);
      return this.client = c.resourceClient;
    };

    LMFService.prototype.load = function(loadable) {
      var _this = this;
      console.info(loadable);
      return this.client.getResourceMetadata(loadable.options.uri, function(res) {
        var entities;
        console.info('Got', loadable.options.uri, 'from LMF:', res);
        entities = VIE.Util.rdf2Entities(_this, res);
        return loadable.resolve(entities);
      }, function(err) {
        return loadable.reject(err);
      });
    };

    LMFService.prototype.save = function(savable) {
      if (true) {
        return savable.resolve({
          result: {
            test: true
          }
        });
      } else {
        return savable.reject({
          err: 123
        });
      }
    };

    return LMFService;

  })();

}).call(this);
